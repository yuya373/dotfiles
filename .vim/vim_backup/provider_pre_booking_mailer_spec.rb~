require 'spec_helper'

describe ProviderPreBookingMailer do
  let(:provider){ create :provider }
  let(:listing){ create :d_listing, provider: provider }
  let!(:mail_template){ create :mail_template, listing: listing }
  let(:user){ create :user }
  let(:pre_booking){ create :pre_booking, listing: listing, user: user }
  let(:info){ APP_CONFIG["mail"]["info"] }
  let!(:location){ create :listing_location, listing: listing }

  describe "#approved" do
    subject{ ProviderPreBookingMailer.approved(pre_booking.id) }
    it do
      should deliver_to(user.email)
    end
    it do
      should deliver_from(info)
      should reply_to(listing.email)
    end
    it do
      should have_body_text(/ご予約が確定/)
      should have_body_text(mail_template.content)
      should have_body_text( pre_booking.
                            created_at.strftime("%Y年%m月%d日 %H:%M") )
      should have_body_text(location.full_address)
    end
    it '件名に予約番号を表示' do
      should have_subject( /#{ sprintf("%05d", pre_booking.id) }/ )
    end
  end

  describe "#declined" do
    subject{ ProviderPreBookingMailer.declined(pre_booking.id) }
    it do
      should deliver_to(user.email)
      should reply_to(listing.email)
    end
    it do
      should have_body_text(/ご予約を受け付けることができません/)
      should have_body_text( pre_booking.
                            created_at.strftime("%Y年%m月%d日 %H:%M") )
      should have_body_text(location.full_address)
    end
    it '件名に予約番号を表示' do
      should have_subject( /#{ sprintf("%05d", pre_booking.id) }/ )
    end
  end

  describe "#canceled" do
    subject{ ProviderPreBookingMailer.canceled(pre_booking.id, 'user_canceled') }
    it do
      should reply_to(listing.email)
    end
    it do
      should_not have_body_text("まことに申し訳ありません")
      should have_body_text("キャンセル")
      should have_body_text( pre_booking.created_at.strftime("%Y年%m月%d日 %H:%M") )
      should have_body_text(location.full_address)
    end
    it '件名に予約番号を表示' do
      should have_subject( /#{ sprintf("%05d", pre_booking.id) }/ )
    end
  end

  describe "#canceled" do
    subject{ ProviderPreBookingMailer.canceled(pre_booking.id, 'provider_canceled') }
    it do
      should reply_to(listing.email)
    end
    it do
      should have_body_text("まことに申し訳ありません")
      should have_body_text("キャンセル")
      should have_body_text( pre_booking.created_at.strftime("%Y年%m月%d日 %H:%M") )
      should have_body_text(location.full_address)
    end
    it '件名に予約番号を表示' do
      should have_subject( /#{ sprintf("%05d", pre_booking.id) }/ )
    end
  end

  describe "#send_urging_mail" do
    before :each do
      user = create(:user)
      provider = create(:provider)
      pre_booking = crate(:pre_booking, user: user, listing: listing)
    end
    # subject{ ProviderPreBookingMailer.send_urging_mail(pre_booking.id) }
    it do
      should deliver_to(listing.email)
    end
    it do
      should have_body_text("仮予約が未対応")
      should have_body_text( pre_booking.created_at.strftime("%Y年%m月%d日 %H:%M") )
    end
    it '件名に予約番号を表示' do
      should have_subject( /#{ sprintf("%05d", pre_booking.id) }/ )
    end
  end

  describe "#add_information_to_user" do
    let(:template){ "テンプレート" }
    subject{ ProviderPreBookingMailer.
      add_information_to_user(pre_booking.id, template) }
    it do
      should reply_to(listing.email)
      should deliver_to(user.email)
    end
    it do
      should have_body_text(template)
      should have_body_text(location.full_address)
    end
    it '件名に予約番号を表示' do
      should have_subject( /#{ sprintf("%05d", pre_booking.id) }/ )
    end
  end
end
