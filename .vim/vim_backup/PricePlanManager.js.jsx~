/** @jsx React.DOM */

define([
    "react",
    "components/mixins/AjaxMixin",
    "components/pc/scheduler/PricePlanView",
    "components/pc/scheduler/PricePlanForm",
    "components/pc/scheduler/PricePlanSelectButton"
  ], function(React, AjaxMixin, PricePlanView, PricePlanForm, PricePlanSelectButton) {

  var Manager = React.createClass({
    mixins: [AjaxMixin],
    getInitialState: function() {
      return {
        "inEditIds":[],
        "plans":this.props.plans,
        "showNewForm": false
      };
    },
    render: function() {
      if(!this.props.day) {
        return <div className="hidden"></div>;
      }
      var style = {"top":"20%"};
      return (
        <div className="price-plan-manager modal" style={style}>
          <div className="modal-header">
            <button ref="close" type="button" className="close" onClick={this.dismiss}>&times;</button>
            <h3>料金プランの変更</h3>
          </div>
          <div className="modal-body">
            {_.keys(this.props.plans).map(this.renderPricePlanRow)}
            {this.renderNewRow()}
          </div>
        </div>
      );
    },
    renderPricePlanRow: function(key, index) {
      var plan = this.props.plans[key];
      return (
        <div key={index} className="price-plan-group">
          <div className="left-col">
            <PricePlanSelectButton
              plan={plan}
              day={this.props.day}
              onClick={this.handleSelectPlan} />
          </div>
          <div className="right-col">
            {this.renderPricePlanItem(key, index)}
          </div>
        </div>
      );
    },
    renderPricePlanItem: function(key, index) {
      var plan = this.props.plans[key];
      if(_.indexOf(this.state.inEditIds, plan.id) > -1) {
        return <PricePlanForm
                  onSave={this.updatePlan}
                  onCancel={this.cancelUpdatePlan}
                  onChange={this.changePlan}
                  plan={plan}
                  index={index} />;
      }
      return <PricePlanView
                onEditStart={this.handlePlanEditStart}
                plan={plan}
                listingId={this.props.listingId}
                index={index} />;
    },
    renderNewRow: function() {
      return (
        <div className="price-plan-group">
          <div className="right-col">
            {this.renderNewItem()}
          </div>
        </div>

      );
    },
    renderNewItem: function() {
        return;
    },
    dismiss: function() {
      this.props.onDismiss();
    },
    handleSelectPlan: function(params) {
      var data = {
        "listingId"   : this.props.listingId,
        "planId"      : params.plan.id,
        "date"        : this.props.day.date,
        "_method"     : "patch"
      };
      // console.log(data);
      this.ajaxPost({
        "data"      : data,
        "api"       : this.props.apiSelectPricePlan,
        "callback"  : this.onSelectPlan,
        "messageCallback": this.props.showMessage,
        "showSuccessMessage": true
      });
    },
    onSelectPlan: function(params) {
      var data  = params.datasource,
          planId = data.planId;

      if(data.result != "success") {
        return;
      }

      this.props.onPricePlanSelect(planId);
    },
    handlePlanEditStart: function(plan) {
      var inEditIds = this.state.inEditIds;
      inEditIds.push(plan.id);
      this.setState({"inEditIds":inEditIds});
    },
    changePlan: function(values) {
      // Just for testing
      console.log("changePlan", this.props.plans);
    },
    cancelUpdatePlan: function(id) {
      // console.log("cancelUpdatePlan", this.props.plans, this.state.plans);
      var inEditIds = this.state.inEditIds,
          newIds    = _.without(inEditIds, id);
      this.setState({"inEditIds":newIds});
    },
    updatePlan: function(plan) {
      var data = {
        "listingId"   : this.props.listingId,
        "plan"        : plan,
        "_method"     : "patch"
      };
      // console.log(this.props);
      this.ajaxPost({
        "data"      : data,
        "api"       : this.props.apiUpdatePricePlans[plan.id],
        "callback"  : _.bind(this.onUpdatePlan, this, plan),
        "messageCallback": this.props.showMessage,
        "showSuccessMessage": true
      });
    },
    onUpdatePlan: function(plan, params) {
      var data = params.datasource;
      if(data.result != "success") {
        return;
      }
      var inEditIds = this.state.inEditIds;
      this.setState({"inEditIds": _.without(inEditIds, plan.id) });
      this.props.onUpdate(plan);
    },
    showNewForm: function() {
      this.setState({"showNewForm":true});
    },
    cancelAddPlan: function() {
      this.setState({"showNewForm":false});
    },
    addPlan: function(plan) {
      var data = {
        "listingId"   : this.props.listingId,
        "plan"        : plan
      };
      this.ajaxPost({
        "data"      : data,
        "api"       : this.props.apiAddPricePlan,
        "callback"  : this.onAddPlan,
        "messageCallback": this.props.showMessage,
        "showSuccessMessage": true
      });
    },
    onAddPlan: function(params) {
      var data = params.datasource;
      if(data.result != "success") {
        return;
      }
      this.props.onAdd(data.plan);
      this.setState({"showNewForm":false});
    }
  });

  return Manager;

});

