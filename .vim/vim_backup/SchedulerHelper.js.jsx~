/** @jsx React.DOM */

define(["react"], function(React) {
  return {
    getDayIndexFromDays: function(days, date) {
      for(var i=0;i<days.length;i++) {
        if(days[i].date == date) {
          return i;
          break;
        }
      }
      return -1;
    },
    // scrollToDefaultTime: function(defaultTime) {
    //   this.prepareSlotMixin(this.state.hourlySlots.length);
    //   var top = this.slotNumFromTimeLabel(defaultTime) * this.state.slotHeight - (this.state.slotHeight / 2);
    //   $(".scheduler-rows-shell").scrollTop(top);
    // },
    handleWeekChange: function(params) {
      this.updateState({
        "startsAt": params.startsAt,
        "onlySchedule": true
      }, {
        "callback":this.onWeekChange
      });
    },
    onWeekChange: function(params) {
      var nextData = params.datasource,
          nextDays = nextData.days,
          datasource = _.extend({}, this.state.datasource),
          t = this;
      datasource.days = nextDays;

      var newState = {"datasource": datasource};
      if(_.isFunction(this.hasSlots) ) {
        newState["hasSlots"] = this.hasSlots(datasource.days);
      }
      this.setState(newState, function() {
        console.log(t.refs);
        t.refs.eventCanvas.weekDidChange(nextDays);
        t.refs.daysHeader.weekDidChange(nextDays);
        if(t.refs.slotsManager) {
          t.refs.slotsManager.weekDidUpdate(nextDays);
        }
      });
    },
  }
});

