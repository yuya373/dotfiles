class Time
  def truncate_ymd
    self.change(year: 2000, month: 1, day: 1)
  end
end
# Mailboxer::Models::Messageable.class_eval do
  # def send_message(recipients, msg_body, subject, association=nil, sanitize_text=true, attachment=nil, message_timestamp = Time.now)
    # convo = Conversation.new({:subject => subject})
    # convo.created_at = message_timestamp
    # convo.updated_at = message_timestamp
    # message = messages.new({:body => msg_body, :subject => subject, :attachment => attachment})
    # message.created_at = message_timestamp
    # message.updated_at = message_timestamp
    # message.conversation = convo
    # message.recipients = recipients.is_a?(Array) ? recipients : [recipients]
    # message.recipients = message.recipients.uniq
    # message.deliver false, sanitize_text
    # convo.save
    # if association.is_a?(PreBooking)
      # association.create_pre_booking_conversation(conversation_id: convo.id)
    # else
    # end
  # end
# end

# Conversation.class_eval do
  # def pre_booking

  # end
# end
