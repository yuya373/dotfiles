require 'sidekiq/web'
require 'sidetiq/web'

Room::Application.routes.draw do
  root to: "listings#index"

  get "how_it_works/provider"
  get "how_it_works/provider_faq"
  get "how_it_works/provider_fees"
  get "how_it_works/provider_support"
  get "how_it_works/provider_support_success"
  get "how_it_works/user"
  get "how_it_works/user_faq"
  post "how_it_works/contact"

  get "about", to: "misc#about"
  get "privacy", to: "misc#privacy"
  get "company", to: "misc#company"
  get "campaign", to: "campaign#opening"
  get "status", to: "misc#status"
  get "trade", to: "misc#trade"
  get "agreement", to: "misc#agreement"
  get "agreement_for_provider", to: "misc#agreement_for_provider"

  resources :listings, only: [:index, :show] do
    resources :contacts, only: [:new, :create]
    resources :booking_requests, only: [:index,:show,:new,:create],
    to: 'user/booking_requests', shallow: true
    resources :pre_bookings, only: [:new, :create]
    resources :price_plans, only: :index
    member do
      get :availability
      get :calendar
      get :terms
      get :reviews
      get :related
    end
    resources :room_calendars, only: [:index, :show] do
      collection do
        get :available
      end
    end
  end

  resource :payment, only: [:new] do
    resources :cards, only: [:index, :show, :new, :create]
    resources :pre_bookings, controller: 'payments/pre_bookings', only: [:new,:create]
  end

  resources :usages, only: [:index] do
    resources :listings, to: 'usage_listings', only: [:index]
  end
  resources :pre_bookings, only: [:index, :show] do
    get :bill, on: :member
    resources :reviews, controller: "user/reviews", only: [:new,:create,:update]
    resource :cancel, controller: "user/cancels", only: [:new, :create]
  end
  get :search, to: "listings#search", as: :search_listings

  get "/prefectures/13", to: redirect("/tokyo")
  get "/tokyo", to: "prefectures#show", id: 13

  get "locations/:preferecture/:neighborhood", to: "listings#neighborhood", as: :locations
  resources :prefectures, only: [:index, :show] do
    resources :cities, only: [:index] do
      resources :listings, to: 'city_listings', only: [:index]
    end
  end

  resources :stations, only: [:index] do
    resources :listings, to: 'station_listings', only: [:index]
  end
  resources :lines, only: [:index, :show] do
    resources :listings, to: 'line_listings', only: :index
  end

  resources :listing_collections , only: [:index]
  get "collections/:collection_key", to: "listing_collections#index", as: :collections

  namespace :user do
    resource :user, only: :show do
      get :password, on: :collection
    end
    resources :cards, only: [:index, :show, :new, :create, :destroy]
    resource :user_profiles, only: [:new, :create, :edit, :update, :show]
    resources :reviews, only: [:show,]
  end

  scope :user do
    get :home, to: "pre_bookings#index", as: :user_root
  end

  devise_for :users, controllers: {
    registrations: "users/registrations",
    sessions: "users/sessions",
    passwords: "users/passwords",
    confirmations: "users/confirmations",
  }

  as :user do
    get "users/edit/password", to: "users/registrations#edit_password",
      as: :edit_password_user_registration
  end

  namespace :users do
    scope :main, controller: :main do
      get :after_inactive_sign_up
      get :after_confirmation
    end
  end

  namespace :provider do
    get :home, to: "dashboard#index", as: :root
    get :unconfirmed, to: "providers#unconfirmed"
    get :dashboard, to: "dashboard#index"
    resources :listings, only: [], shallow: true do
      resources :alien_bookings
    end
    resources :alien_bookings, only: [:index]
    resources :booking_requests, only: [:show] do
      member do
        patch :accept
        patch :deny
      end
    end
    resources :dashboard, only: :index
    resources :feedbacks, only: [:new,:create]
    resources :listings do
      resources :photos, only: [:new] do
        get :edit, on: :collection
      end
      resource :calendar_configurations, only: [:new,] do
        collection do
          get :edit_all
          patch :update_all
          patch :setup
        end
      end
      resources :discount_plans, except: [:show]
      resource :preview, only: [:show] do
        get :price_plans, on: :member
      end
      member do
        patch :publish
      end
      resources :pre_booking_schedules, only: [:edit, :update]
      resource :price_plan_setup, only: [:new,:create]
      resource :room_calendar_setup, only: [:new,:create] do
        get :finish, on: :collection
      end
      resources :room_schedules, only: [:create,:update,:destroy] do
        collection do
          post :fill
          post :fill_range
        end
      end
      resources :price_plans, only: [:create,:update,:destroy]
      resources :room_calendars, only: [:index,:show] do
        collection do
          get :scheduler
          patch :price_plan
          patch :business_hour
        end
      end
      resources :price_plans
      resources :reviews, only: [:index]
    end
    resources :monthly_sales, only: [:index]
    resources :pre_bookings, only: [:index, :show, :destroy,] do
      member do
        patch :approve
        patch :decline
      end
      resource :messages, only: [] do
        patch :send_info_mail
        patch :preview
        patch :new
      end
      collection do
        get :show_approved
        get :show_pending
        get :show_declined
      end
    end
    resource :provider
    resource :provider_user, only: :show do
      get :password, on: :collection
    end
    resources :helps, only: :index, path: '/help' do
      collection do
        ([:space,:pre_bookings,:account] +
          [:calendar_overview,:calendar_management,
           :calendar_hours,:calendar_prices] +
          [:listing_overview,:listing_base,:listing_prices,]).each do |k|
          get k
        end
      end
    end
  end

  devise_for :provider_users, controllers: {
    registrations: "provider_users/registrations",
    sessions: "provider_users/sessions",
    passwords: "provider_users/passwords",
    confirmations: "provider_users/confirmations",
  }

  as :provider_user do
    get "provider_users/edit/password", to: "provider_users/registrations#edit_password",
      as: :edit_password_provider_user_registration
  end

  namespace :provider_users do
    scope :main, controller: :main do
      get :after_sending_reset_password_instructions
      get :after_resending_confirmation_instructions
      get :after_confirmation
      get :after_inactive_sign_up
    end
  end

  get :sitemap, to: "sitemap#index"

  namespace :admin do
    root "dashboard#index"
    get :dashboard, to: "dashboard#index"
    get :tools, to: "dashboard#tools"
    get "email_generator/published", to: "email_generator#published"
    post "email_generator/published", to: "email_generator#gen_published"
    resources :equipments, only: [:index, :create]
    resources :listing_collections, only: [:index, :create]
    resources :listings do
      get :all, on: :collection
      get :stocks, on: :member
      resource :payment_configuration, only: [:new,:edit,:update,:create]
    end
    resources :monthly_sales, only: [:index]
    resources :neighborhoods, except: [:new, :edit, :update] do
      resources :neighborhood_stations, path: :stations, as: :stations, only: [:create, :destroy]
    end
    resources :pre_bookings, only: [:index, :show, :destroy,]
    resources :providers, shallow: true do
      post :become, on: :member
      resources :pre_bookings, only: :index
      resources :listings do
        resources :pre_bookings, only: :index
        resources :room_schedule_logs, only: :index
      end
    end
    resources :providers do

    end
    resources :reviews, only: [:index]
    resources :stocks, only: [:index]
    resources :usages
    resources :users, only: [:index, :show] do
      post :become, on: :member
    end
  end

  devise_for :admin_users, controllers: {
    registrations: "admin_users/registrations",
    sessions: "admin_users/sessions",
  }

  authenticate :admin_user do
    mount Sidekiq::Web => '/admin/sidekiq'
  end

  # unless Rails.application.config.consider_all_requests_local
  #   match '*not_found' => 'errors#error_404', via: [:get, :post]
  # end

  # match '*not_found' => 'errors#error_404', via: [:get, :post]
end
