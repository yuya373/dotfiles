/** @jsx React.DOM */

define(function() {
  return {
    stateClass: {
      "cleaning"    : "block-cleaning",
      "unavailable" : "block-unavailable",
      "available"   : "block-available",
      "occupied"    : "block-occupied"
    },
    getStateClass: function(key) {
      return this.stateClass[key] || "unknown";
    },
    stateClassToKey: function($target) {
      var keys   = _.keys(this.stateClass),
          keyLen = keys.length;
      for(var i =0;i<keyLen;i++) {
        if($target.hasClass(this.stateClass[keys[i]])) {
          return keys[i];
        }
      }
      return "unknown";
    },
    getInteractiveBlock: function(dayIndex, startsAt) {
      return this.$canvas.find(".slot-block[dayIndex='" + dayIndex + "'][startsAt='" + startsAt + "']");
      console.log(target.attr("dayIndex"));
    },
    getBlocksByDayIndex: function(index, ignoreStartsAt) {
      // return this.$canvas.find(".slot-block[dayIndex=" + index + "]:not(.block-temp)");
      var includeSelector = ".slot-block[dayIndex=" + index + "]",
          excludeSelector = ".block-temp";
      if(ignoreStartsAt) {
        excludeSelector += ", [startsAt='" + ignoreStartsAt + "']";
      }
      return this.$canvas.find(includeSelector + ":not(" + excludeSelector + ")");
    },
    getDayIndexByDate: function(date) {
      for(var i=0;i<this.props.days.length;i++) {
        if(this.props.days[i].date == date) {
          return i;
        }
      }
      return -1;
    },
    prevBlock: function($el, index, ignoreStartsAt) {
      var elTop       = $el.position().top,
          heighestTop = -1,  // lowest value of the block top is 0
          prevBlock   = null;
      this.getBlocksByDayIndex(index, ignoreStartsAt).each(function(index, block) {
        var top = $(block).position().top;
        if( top < elTop && top > heighestTop) {
          heighestTop = top;
          prevBlock   = block;
        }
      });
      return prevBlock;
    },
    nextBlock: function($el, index) {
      var elTop       = $el.position().top,
          elHeight    = $el.height(),
          lowestTop   = 10000000,
          nextBlock   = null;
      this.getBlocksByDayIndex(index).each(function(index, block) {
        var top = $(block).position().top;
        if( top > elTop + elHeight && lowestTop > top) {
          lowestTop = top;
          nextBlock = block;
        }
      });
      // console.log("nextBlock", nextBlock);
      return nextBlock;
    }
  };
});
