class ProviderPreBookingMailer < ActionMailer::Base
  layout "mail"
  default from: APP_CONFIG["mail"]["info"]
  helper ApplicationHelper

  def approved(pre_booking_id)
    set_pre_booking(pre_booking_id)
    @mail_template = @listing.mail_template
    mail subject: "[Spacee]スペース予約確定のお知らせ 予約No:#{@pre_booking.id_to_num}", to: @user.email,
    bcc: bcc, reply_to: @listing.email
  end

  def declined(pre_booking_id)
    set_pre_booking(pre_booking_id)
    mail subject: "[Spacee]仮予約が確定されませんでした 予約No:#{@pre_booking.id_to_num}", to: @user.email,
    bcc: bcc, reply_to: @listing.email
  end

  def canceled(pre_booking_id, cancel_by)
    @is_provider_canceled = (cancel_by != 'user_canceled')
    set_pre_booking(pre_booking_id)
    mail subject: "[Spacee]予約がキャンセルされました 予約No:#{@pre_booking.id_to_num}", to: @user.email,
    bcc: bcc, reply_to: @listing.email
  end

  def send_urging_mail(pre_booking_id)
    set_pre_booking(pre_booking_id)
    mail subject: "[Spacee]重要: 未対応の仮予約があります 予約No:#{@pre_booking.id_to_num}", to: @listing.email, bcc: bcc
  end

  def add_information_to_user(pre_booking_id, mail_template)
    set_pre_booking(pre_booking_id)
    @mail_template = mail_template
    mail subject: "[Spacee]スペース運営者からのお知らせ 予約No:#{@pre_booking.id_to_num}", to: @pre_booking.email,
    bcc: bcc, reply_to: @listing.email
  end

  private

  def bcc
    [APP_CONFIG["mail"]["mail"], @listing.email]
  end

  def set_pre_booking(pre_booking_id)
    @pre_booking = PreBooking.includes(:listing => :provider).find pre_booking_id
    @listing = @pre_booking.listing
    @provider = @listing.provider
    @user = @pre_booking.user
  end
end
