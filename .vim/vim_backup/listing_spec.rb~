# -*- coding: utf-8 -*-
# == Schema Information
#
# Table name: listings
#
#  id                          :integer          not null, primary key
#  provider_id                 :integer          not null
#  category_id                 :integer          not null
#  is_display                  :boolean          default(FALSE), not null
#  is_approved                 :boolean          default(FALSE), not null
#  title                       :string(255)      not null
#  thumb                       :string(255)
#  capacity                    :integer          not null
#  square                      :integer          not null
#  location                    :string(255)      not null
#  desc                        :string(255)      not null
#  latitude                    :float
#  longitude                   :float
#  zoom                        :integer
#  price                       :integer          default(0), not null
#  created_at                  :datetime
#  updated_at                  :datetime
#  email                       :string(255)      not null
#  tel                         :string(255)      not null
#  acceptable_from_now_minutes :integer          default(0), not null
#  min_booking_minutes         :integer          not null
#
# Indexes
#
#  provider_id_and_title  (provider_id,title) UNIQUE
#

require 'spec_helper'

describe Listing do
  let!(:listing){ create :d_listing }

  it do
    should ensure_length_of(:title).is_at_least(3).is_at_most(255)
  end

  it do
    should validate_uniqueness_of(:title).scoped_to(:provider_id)
  end

  it do
    should have_many(:collections)
  end

  it do
    should have_one(:station)
  end

  it do
    should have_one(:listing_cancellation_policy).dependent(:destroy)
  end

  it do
    should accept_nested_attributes_for(:listing_cancellation_policy)
  end

  it do
    should have_
  end

  describe ".approved_is" do
    it "when pass true" do
      Listing.approved_is(true).should be_all(&:is_approved?)
    end
    it "when pass false" do
      Listing.approved_is(false).should be_none(&:is_approved?)
    end
  end

  describe ".published" do
    it do
      Listing.published.should be_all(&:published?)
    end
  end
end
