require 'spec_helper'

describe ReceptionDesk, '#sign_in' do
  context 'ユーザー名とパスワードが一致する場合' do
    let(:customer){ create(:customer) }

    specify 'sign_inが成功するとRewardManager#grant_login_pointsがよばれる' do
      reward_manager = double
      RewardManager.stub(:new).with(customer).and_return(reward_manager)

      expect(reward_manager).to receive(:grant_login_points)
      ReceptionDesk.new(customer.username, customer.password).sign_in
    end

    specify 'return Customer object matches username and password' do
      valid = ReceptionDesk.new(customer.username, customer.password).sign_in
      expect(valid).not_to be_nil
      expect(valid).to eq(customer)
    end
  end

  context '該当するユーザーが存在しない場合' do
    let(:customer){ create(:customer) }
    specify 'return nil when invalid username' do
      invalid = ReceptionDesk.new('toni blanco', customer.password).sign_in
      expect(invalid).to be_nil
    end
    specify 'sign_inが失敗するとRewardManager#grant_login_pointsがよばれない' do
      reward_manager = double
      RewardManager.stub(:new).with(customer).and_return(reward_manager)

      expect(reward_manager).not_to receive(:grant_login_points)
      ReceptionDesk.new(customer.username, 'wrong_password').sign_in
    end
  end

  context 'パスワードが一致しない場合' do
    let(:customer){ create(:customer) }
    specify 'return nil when invalid password' do
      invalid = ReceptionDesk.new(customer.username, 'invalid_password').sign_in
      expect(invalid).to be_nil
    end
    specify 'sign_inが失敗するとRewardManager#grant_login_pointsがよばれない' do
      reward_manager = double
      RewardManager.stub(:new).with(customer).and_return(reward_manager)

      expect(reward_manager).not_to receive(:grant_login_points)
      ReceptionDesk.new(customer.username, 'wrong_password').sign_in
    end
  end


  context 'パスワード未設定の場合' do
    let(:customer){ create(:customer, username: 'yuyaminami', password: nil) }

    specify 'return nil' do
      invalid = ReceptionDesk.new( customer.username, '' )

      expect(invalid).to be_nil
    end
  end


end
