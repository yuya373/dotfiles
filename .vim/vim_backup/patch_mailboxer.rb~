Mailboxer::Models::Messageable.class_eval do
  def send_message(recipients, msg_body, subject, association=nil, sanitize_text=true, attachment=nil, message_timestamp = Time.now)
    if association.is_a?(Listing)
      convo = association.conversations.build(subject: subject)
    elsif association.is_a?(PreBooking)
      convo = association.build_conversation(subject: subject)
    else
      convo = Conversation.new({:subject => subject})
    end
    convo.created_at = message_timestamp
    convo.updated_at = message_timestamp
    message = messages.new({:body => msg_body, :subject => subject, :attachment => attachment})
    message.created_at = message_timestamp
    message.updated_at = message_timestamp
    message.conversation = convo
    message.recipients = recipients.is_a?(Array) ? recipients : [recipients]
    message.recipients = message.recipients.uniq
    message.deliver false, sanitize_text
  end
end

Conversation.class_eval do
  belongs_to :pre_booking
  belongs_to :listing
end
