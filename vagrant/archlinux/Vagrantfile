# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "~/dev/arch-boxes/local.box"

  config.vm.hostname = "archlinux"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080
  config.vm.network "forwarded_port", guest: 4010, host: 4010
  config.vm.network "forwarded_port", guest: 4135, host: 4135

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.network "private_network", type: "dhcp"
  config.mutagen.orchestrate = true
  rsync_args = ["--verbose", "--archive", "--delete", "-zz", "--copy-links"]
  config.vm.synced_folder "~/dotfiles", "/home/vagrant/dotfiles", type: "rsync", rsync__args: rsync_args, rsync__exclude: [".emacs.d", ".git"]
  config.vm.synced_folder "~/dev/maricuru", "/home/vagrant/dev/maricuru", type: "rsync", rsync__args: rsync_args, rsync__exclude: ["tmp/cache"]
  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = false
    #
    # Customize the amount of memory on the VM:
    # vb.memory = "1024"
    vb.cpus = 2
    vb.memory = "4096"
    # https://github.com/hashicorp/vagrant/issues/1807
    vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    # https://akamist.com/blog/archives/520
    vb.customize ["modifyvm", :id, "--nictype1",  "virtio"]
    vb.customize ["modifyvm", :id, "--nictype2",  "virtio"]

    vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    sudo pacman -Sy --noconfirm archlinux-keyring
    sudo pacman -Syyu --noconfirm
    sudo pacman -Syu --noconfirm --needed base-devel git

    if ! command -v yay > /dev/null; then
      if [[ ! -d ~/yay ]]; then
        git clone https://aur.archlinux.org/yay.git ~/yay
      fi
      pushd ~/yay
      makepkg -Csi --needed --noconfirm
      popd
    fi
    yay -Syu --noconfirm --needed docker docker-compose vim zsh direnv yarn nodenv nodenv-node-build

    sudo usermod -aG docker $USER
    systemctl enable docker
    systemctl start docker

    sudo ln -sf ~/dotfiles/etc/locale.gen /etc/locale.gen
    sudo locale-gen

    ln -sf ~/dotfiles/.zshrc ~/.zshrc
    ln -sf ~/dotfiles/.zshenv ~/.zshenv
    ln -sf ~/dotfiles/.zprofile ~/.zprofile

    if builtin command -v zsh > /dev/null; then
      if [ $(builtin command -v zsh) != $(grep vagrant /etc/passwd | cut -d: -f7) ]; then
        sudo chsh -s `which zsh` vagrant
      fi
    fi
  SHELL
end
