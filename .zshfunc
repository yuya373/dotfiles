# -*- mode: sh -*-

ls_abbrev() {
    if [[ ! -r $PWD ]]; then
        return
    fi
    # -a : Do not ignore entries starting with ..
    # -C : Force multi-column output.
    # -F : Append indicator (one of */=>@|) to entries.
    local cmd_ls='ls'
    local -a opt_ls
    opt_ls=('-aCF' '--color=always')
    case "${OSTYPE}" in
        freebsd*|darwin*)
            if type gls > /dev/null 2>&1; then
                cmd_ls='gls'
            else
                # -G : Enable colorized output.
                opt_ls=('-aCFG')
            fi
            ;;
    esac

    local ls_result
    ls_result=$(CLICOLOR_FORCE=1 COLUMNS=$COLUMNS command $cmd_ls ${opt_ls[@]} | sed $'/^\e\[[0-9;]*m$/d')

    local ls_lines=$(echo "$ls_result" | wc -l | tr -d ' ')

    if [ $ls_lines -gt 10 ]; then
        echo "$ls_result" | head -n 5
        echo '...'
        echo "$ls_result" | tail -n 5
        echo "$(command ls -1 -A | wc -l | tr -d ' ') files exist"
    else
        echo "$ls_result"
    fi
}

function do_enter() {
    if [ -n "$BUFFER" ]; then
        zle accept-line
        return 0
    fi
    echo
    echo -e "\e[0;33m--- ls ---\e[0m"
    # ls -aCFG
    ls_abbrev
    if [ "$(git rev-parse --is-inside-work-tree 2> /dev/null)" = 'true' ]; then
        echo
        echo -e "\e[0;33m--- git status ---\e[0m"
        git status -sb
        echo
    fi
    echo -e "\e[0;33m--- end ---\e[0m"
    my_reset_prompt
    return 0
}
zle -N do_enter

function tmux_window_name()
{
    tmux rename-window ${PWD:t}
}
if [ -n "$TMUX" ]; then
    autoload -Uz add-zsh-hook
    add-zsh-hook precmd tmux_window_name
fi

function my_reset_prompt()
{
    if type precmd > /dev/null 2>&1; then
        precmd
    fi
    local precmd_func
    for precmd_func in $precmd_functions; do
        if [[ "^notify-command-complete" =~ "${precmd_func}" ]] > /dev/null; then
            echo "" > /dev/null
        fi
        $precmd_func
    done
    zle reset-prompt
}

pf() {
    ps aux | fzf -e
}

mem() {
    local command="$1"
    ps aux | grep -i "$command" | awk -F' ' '{print $6, $11}'| grep -v grep | awk -F ' ' '{sum += $1} END {print sum/1000 " MB"}'
}

man() {
    LESS_TERMCAP_md=$'\e[01;31m' \
    LESS_TERMCAP_me=$'\e[0m' \
    LESS_TERMCAP_se=$'\e[0m' \
    # LESS_TERMCAP_so=$'\e[01;44;33m' \
    LESS_TERMCAP_ue=$'\e[0m' \
    LESS_TERMCAP_us=$'\e[01;32m' \
    command man "$@"
}

convert_to_gif() {
    input="$1"
    output="${2:-out.gif}"
    ffmpeg -i $input -vf scale=320:-1 -r 30 $output
}

# リポジトリを選択してcdする
function ghq-fzf() {
  local selected
  selected=$(ghq list --full-path | fzf)
  if [ -n "$selected" ]; then
    cd "$selected"
  fi
}
zle -N ghq-fzf
