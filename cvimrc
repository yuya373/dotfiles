let searchlimit = 30
let locale = "jp"
let mapleader = ","
let completionengines = ["google", "amazonjp"]
let searchengine amazonjp = "https://www.amazon.co.jp/s/&field-keywords=%s"
let searchalias g = "google"
let searchalias a = "amazonjp"

set noautofocus
set nosmoothscroll
set nonativelinkorder
set noshowtabindices
set completeonopen
set sortlinkhints
set cncpcompletion

yankForMarkdown -> {{
  const title = document.title;
  const url = window.location.href;
  const text = `[${title}](${url})`;
  Status.setMessage(text,3);
  Clipboard.copy(text);
}}

yankForOrgMode -> {{
  const title = document.title;
  const url = window.location.href;
  const text = `[[${url}][${title}]]`;
  Status.setMessage(text,3);
  Clipboard.copy(text);
}}

yankTitle -> {{
  const text = document.title;
  Status.setMessage(text,3);
  Clipboard.copy(text);
}}

openHatenaEntryInNewTab -> {{
  let location;
  const canonical = document.querySelector('link[rel="canonical"]');

  if (canonical) {
    location = new URL(canonical.href);
  } else {
    location = window.location;
  }

  const {pathname, hostname, protocol, search} = location;
  const isHttps = protocol === "https:";
  const url = `http://b.hatena.ne.jp/entry/${isHttps ? "s/" : ""}${hostname}${pathname}${search}`
  window.open(url);
}}

unmap p
unmap a
map o :open<Space>
map <Leader>g :tabnew<Space>google<Space>
map <Leader>a :tabnew<Space>amazonjp<Space>
map m centerMatchH
map F createActiveTabbedHint
map <Leader>f createTabbedHint
map <Leader>h createHoverHint
map <Leader>H createUnHoverHint
map tt :tabnew<Space>
map tn nextTab
map tp previousTab
map tP pinTab
map tf firstTab
map tl lastTab
map tb :call openHatenaEntryInNewTab<CR>
map b :buffer<Space>
map <Leader>b :bookmark<Space>
map <Leader>r reloadTabUncached
map <Leader>x :restore<Space>
map R reloadTabUncached
unmap y
map yY yankUrl
map yy yankDocumentUrl
map ym :call yankForMarkdown<CR>
map yo :call yankForOrgMode<CR>
map yt :call yankTitle<CR>
map J nextTab
map K previousTab
map M centerMatchH
map T centerMatchT
map B centerMatchB

imap <C-A> selectAll
imap <C-a> beginningOfLine
imap <C-e> endOfLine
imap <C-k> deleteToEnd
imap <C-f> forwardWord
imap <C-b> backwardWord
imap <C-w> deleteWord
imap <C-d> deleteForwardWord
imap <C-h> deleteChar
iunmap <C-i>
imap <C-p> forwardLine
imap <C-n> backwardLine
iunmap <C-j>
